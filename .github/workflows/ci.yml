# Nom du workflow
name: CI

# Définition des événements qui déclenchent le workflow
on:
  # Déclenche le workflow lors d'un push sur la branche 'main'
  push:
    branches: [main, dev]
  # Déclenche le workflow lors d'une pull request vers la branche 'main'
  pull_request:
    branches: [main, dev]

# Définition des jobs (tâches) à exécuter
jobs:
  build:
    # Utilisation d'une machine virtuelle Ubuntu
    runs-on: ubuntu-latest

    # Définition des services nécessaires, ici MySQL
    services:
      mysql:
        # Image Docker de MySQL version 5.7
        image: mysql:5.7
        # Exposition du port 3306 pour MySQL
        ports:
          - 3306:3306
        # Variables d'environnement pour MySQL
        env:
          # MYSQL_ROOT_PASSWORD:
          MYSQL_DATABASE: testBDD

    # Définition des étapes du job
    steps:
      # Étape pour vérifier le code source du repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Étape pour installer PHP avec la version spécifiée
      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.1"

      # Étape pour installer les dépendances du projet
      - name: Install dependencies
        run: |
          # Copie le fichier d'environnement de test
          cp .env.test .env
          # Installe les dépendances avec Composer
          composer install --prefer-dist --no-progress --no-suggest

      - name: Set up environment variables
        run: |
          echo "APP_ENV=test" >> test
          echo "APP_SECRET=d312c95a7b0d69c2fc5fba65c71065c9" >> test
          echo "DATABASE_URL=mysql://root:@127.0.0.1:3306/testBDD?serverVersion=5.7&charset=utf8mb4" >> test
          echo "KERNEL_CLASS='App\\Kernel'" >> test
          echo "SYMFONY_DEPRECATIONS_HELPER=999999" >> test
          echo "PANTHER_APP_ENV=panther" >> test
          echo "PANTHER_ERROR_SCREENSHOT_DIR=./var/error-screenshots" >> test
          echo "MESSENGER_TRANSPORT_DSN=doctrine://default" >> test

      - name: Prepare test database
        run: php bin/console doctrine:database:create --env=test

      - name: Load fixtures
        run: php bin/console doctrine:fixtures:load --env=test --no-interaction

      # Étape pour exécuter les tests avec PHPUnit
      - name: Run tests
        env:
          KERNEL_CLASS: 'App\Kernel'
          APP_SECRET: "$ecretf0rt3st"
          SYMFONY_DEPRECATIONS_HELPER: 999999
          PANTHER_APP_ENV: panther
          PANTHER_ERROR_SCREENSHOT_DIR: ./var/error-screenshots
          MESSENGER_TRANSPORT_DSN: doctrine://default
        run: php bin/phpunit

      # - name: Run Behat/Mink tests
      #   run: |
      #    php vendor/bin/behat
